<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap id="memberResultSet" type="member">
		<result column="USER_NO" property="userNo" />
		<result column="USER_ID" property="userId" />
		<result column="USER_PWD" property="userPwd" />
		<result column="USER_NICKNAME" property="userNickname" />
		<result column="USER_ENROLL_DATE" property="userEnrollDate" />
		<result column="USER_STATUS" property="userStatus" />
		<result column="USER_PROFILE" property="userProfile" />
	</resultMap>
	
	<resultMap id="reviewResultSet" type="review">
		<result column="REVIEW_NO" property="reviewNo" />
		<result column="USER_NO" property="userNo" />
		<result column="MOVIE_ID" property="movieId" />
		<result column="MOVIE_TITLE" property="movieTitle" />
		<result column="TV_ID" property="tvId" />
		<result column="TV_NAME" property="tvName" />
		<result column="REVIEW_STAR" property="reviewStar" />
		<result column="REVIEW_CONTENT" property="reviewContent" />
		<result column="REVIEW_REGISTER_DATE" property="reviewDate" />
		<result column="REVIEW_STATUS" property="reviewStatus" />
		<result column="USER_ID" property="userId" />
		<result column="USER_NICKNAME" property="userNickname" />
	</resultMap>
	
	<!-- 일반결제 resultset -->
    <resultMap id="paymentResultSet" type="payment">
		<result column="PAY_NO" property="payNo" />
		<result column="PAY_ORDER_NO" property="payOrderNo" />
		<result column="USER_NO" property="userNo" />
		<result column="PAYMENT" property="payment" />
		<result column="PAY_DATE" property="payDate" />
		<result column="PAY_END_DATE" property="payEndDate" />
		<result column="PAY_STATUS" property="payStatus" />
		<result column="PAY_URL" property="payUrl" />
	</resultMap>
	
	<!-- 정기결제 resultset -->
	<resultMap id="regPayResultSet" type="payment">
		<result column="REG_NO" property="payNo" />
		<result column="REG_ORDER_NO" property="payOrderNo" />
		<result column="USER_NO" property="userNo" />
		<result column="REG_PAYMENT" property="payment" />
		<result column="REG_DATE" property="payDate" />
		<result column="REG_END_DATE" property="payEndDate" />
		<result column="REG_STATUS" property="payStatus" />
		<result column="REG_URL" property="payUrl" />
		<result column="BILLINGKEY" property="billingKey" />
	</resultMap>
	<!-- 로그인용 쿼리문(암호화작업 완료) -->
	<select id="loginMember" parameterType="member" resultMap="memberResultSet">
		SELECT *
		FROM MEMBER
		WHERE USER_ID = #{userId}
		AND USER_STATUS = 'Y'
	</select>
	
	<!-- 회원가입용 쿼리문 -->
	<insert id="insertMember" parameterType="member">
		INSERT INTO MEMBER (USER_NO
		                 ,  USER_ID
		                 ,  USER_PWD
		                 ,  USER_NICKNAME)
		            VALUES (SEQ_USER_NO.NEXTVAL
		                 ,  #{userId}
		                 ,  #{userPwd}
		                 ,  #{userNickname})
	</insert>
	
	<!-- 아이디중복체크용 쿼리문 -->
	<select id="idCheck" parameterType="string" resultType="_int">
	   SELECT COUNT(*)
	   FROM MEMBER
	   WHERE USER_ID = #{checkId}
	</select>
	
	<!-- 비밀번호 재설정용 쿼리문 -->
	<update id="passwordUpdate" parameterType="member">
		UPDATE MEMBER
		SET USER_PWD = #{userPwd}
		WHERE USER_ID = #{userId} 
	</update>
  
  <!-- 카카오 로그인 정보 찾기 -->
	<select id="findKakao" parameterType="java.util.HashMap" resultMap="memberResultSet">
		SELECT * 
		FROM MEMBER
		WHERE USER_ID = #{email} || '.KAKAO'
	</select>

	<!-- 카카오 로그인 정보 저장 -->
	<insert id="kakaoInsert" parameterType="java.util.HashMap">
		INSERT INTO MEMBER (USER_NO
		                 ,  USER_ID
		                 ,  USER_PWD
		                 ,  USER_NICKNAME)
		            VALUES (SEQ_USER_NO.NEXTVAL
		                 ,  #{email} || '.KAKAO'
		                 ,  '$2a$10$1' || 'kakaoPWD' || SEQ_KAKAOPWD_NO.NEXTVAL	
		                 ,  'K' || #{nickname} || SEQ_KAKAONICK_NO.NEXTVAL)
	</insert>
	
	<!-- 사용자 - 닉네임 중복확인용 쿼리문 -->
	<select id="nicknameCheck" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		  FROM MEMBER
		 WHERE USER_NICKNAME = #{checkNickname}
	</select>
	
	<!-- 사용자 - 회원정보 수정용 쿼리문 -->
	<update id="updateMember" parameterType="member">
		UPDATE MEMBER
		   SET USER_PROFILE = #{userProfile}
		     , USER_NICKNAME = #{userNickname}
		 WHERE USER_NO = #{userNo}
	</update>
	
	<!-- 관리자 - 회원 수 확인용 쿼리문 -->
	<select id="selectListCount" resultType="_int">
		SELECT COUNT(*)
		  FROM MEMBER
	</select>
	
	<!-- 관리자 - 회원 리스트 전체 조회용 쿼리문 -->
	<select id="selectList" resultMap="memberResultSet">
		SELECT USER_NO
			 , USER_ID
			 , USER_NICKNAME
			 , USER_ENROLL_DATE
			 , USER_STATUS
		  FROM MEMBER
	  ORDER BY USER_NO DESC
	</select>
	
	<!-- 관리자 - 검색된 회원 수 확인용 쿼리문 -->
	<select id="selectSearchCount" parameterType="hashmap" resultType="_int">
		SELECT COUNT(*)
		  FROM MEMBER
		 WHERE 
		 <if test="keyword == 'userId'">
		 	USER_ID
		 </if>
		 <if test="keyword == 'userNickname'">
		 	USER_NICKNAME
		 </if>
		 LIKE '%' || #{searchword} || '%'
	</select>
	
	<!-- 관리자 - 검색된 회원 리스트 전체 조회용 쿼리문 -->
	<select id="selectSearchList" parameterType="hashmap" resultMap="memberResultSet">
		SELECT USER_NO
			 , USER_ID
			 , USER_NICKNAME
			 , USER_ENROLL_DATE
			 , USER_STATUS
		  FROM MEMBER
		 WHERE 
		 <if test="keyword == 'userId'">
		 	USER_ID
		 </if>
		 <if test="keyword == 'userNickname'">
		 	USER_NICKNAME
		 </if>
		 LIKE '%' || #{searchword} || '%'
		 ORDER BY USER_NO DESC
	</select>
	
	<!-- 관리자 - 비밀번호 초기화 쿼리문 -->
	<update id="updatePwd" parameterType="_int">
		UPDATE MEMBER
		   SET USER_PWD = '000000'
		 WHERE USER_NO = #{userNo}
	</update>
	
	<!-- 관리자 - 회원 탈퇴 처리용 쿼리문 -->
	<update id="deleteMember" parameterType="_int">
		UPDATE MEMBER
		   SET USER_STATUS = 'N'
		 WHERE USER_NO = #{userNo}
	</update>
	
		<!-- 마이 페이지 별점 및 코멘트 내역 조회를 위한 페이징바(select) - 작성자 : 수빈 -->
	<select id="selectMyCommentListCount" resultType="_int">
		SELECT COUNT(*)
		FROM REVIEW
		WHERE REVIEW_STATUS = 'Y'
           AND USER_NO = #{loginUserNo}
	</select>
	
	<!-- 마이 페이지 별점 및 코멘트 내역에서 코멘트 조회 (select) - 작성자 : 수빈 -->
	<select id="selectMyCommentList" resultMap="reviewResultSet">
		SELECT REVIEW_NO
		     , MB.USER_ID
		     , MB.USER_NICKNAME
		     , MV.TITLE AS "MOVIE_TITLE"
		     , TV.NAME AS "TV_NAME"
		     , TO_CHAR(REVIEW_STAR, 'FM0.0') AS "REVIEW_STAR"
		     , REVIEW_CONTENT
		FROM REVIEW R
		LEFT JOIN MEMBER MB USING(USER_NO)
		LEFT JOIN MOVIE MV ON(R.MOVIE_ID = MV.MOVIE_ID)
		LEFT JOIN TV ON (R.MOVIE_ID = TV.TV_ID)
		WHERE REVIEW_STATUS = 'Y'
           AND USER_NO = #{loginUserNo}
		ORDER BY REVIEW_REGISTER_DATE DESC
	</select>
	
	<!-- 마이 페이지 별점 및 코멘트 내역에서 선택된 리뷰 삭제 메소드 - 작성자: 수빈  -->
	<update id="deleteMyComment" parameterType="_int">
		UPDATE REVIEW
		   SET REVIEW_STATUS = 'N'
		WHERE REVIEW_NO = ${checkNum}
	</update>
	
	<!-- 결제내역 리스트 페이징 처리 - 작성자: 성현 -->
	<select id="selectMyPaymentListCount" resultType="_int">
		SELECT COUNT(*)
		FROM PAYMENT
		FULL JOIN PAYMENT_REGULAR USING (USER_NO)
		WHERE USER_NO = #{loginUserNo}
	</select>
	
	<!-- 결제내역 리스트 조회 - 작성자: 성현 -->
	<select id="selectMyPaymentList" parameterType="_int" resultMap="paymentResultSet">
		SELECT * 
		FROM	(SELECT PAY_ORDER_NO,
		                    PAYMENT,
		                    PAY_DATE,
		                    PAY_END_DATE
		                    FROM PAYMENT
		                    WHERE USER_NO = #{loginUserNo}
		                    UNION
		                    SELECT REG_ORDER_NO AS PAY_ORDER_NO,
		                    REG_PAYMENT AS PAYMENT, 
		                    REG_DATE AS PAY_DATE,
		                    REG_END_DATE AS PAY_END_DATE
		                    FROM PAYMENT_REGULAR
		                    WHERE USER_NO = #{loginUserNo})
		ORDER BY PAY_DATE DESC
	</select>
</mapper>
