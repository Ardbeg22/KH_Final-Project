/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.82
 * Generated at: 2022-12-06 22:19:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import com.urfavoriteott.ufo.contents.model.vo.Movie;
import com.urfavoriteott.ufo.contents.controller.MovieController;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.urfavoriteott.ufo.contents.controller.MovieController");
    _jspx_imports_classes.add("com.urfavoriteott.ufo.contents.model.vo.Movie");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

    String contextPath = request.getContextPath();
    ArrayList<Movie> movieHeader = new MovieController().getMovieTopRated();
    ArrayList<Movie> moviePopular = new MovieController().getMoviePopular();
    ArrayList<Movie> movieLatest = new MovieController().getMovieLatest();
    ArrayList<Movie> movieVideo = new MovieController().getMovieVideo("436270");
    ArrayList<Movie> movieGenre = new MovieController().getMovieSimilar("882598");
    ArrayList<Movie> movieDirector = new MovieController().getMovieSimilar("76600");
    ArrayList<Movie> movieCast = new MovieController().getMovieSimilar("597");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Ur Favorite OTT</title>\r\n");
      out.write("\r\n");
      out.write("    <!-- jQuery 라이브러리 연결 -->\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- Bootstrap 프레임워크 연결 -->\r\n");
      out.write("    <!-- Latest compiled and minified CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css\">\r\n");
      out.write("    <!-- Popper JS -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("    <!-- Latest compiled JavaScript -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- CSS 스타일시트 -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"resources/css/mainCss.css\">\r\n");
      out.write("\r\n");
      out.write("    <!-- Slick 스타일시트 -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.css\" integrity=\"sha512-yHknP1/AwR+yx26cB1y0cjvQUMvEa2PFzt1c9LlS4pRQ5NOTZFWbhBig+X9G9eYW/8m0/4OXNx8pxJ6z57x0dw==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick-theme.min.css\" integrity=\"sha512-17EgCFERpgZKcm0j0fEq1YCJuyAWdz9KUtv1EjVuaOz8pDnh/0nZxmU6BBXwaaxqoi9PQXnRWqlcDB027hgv9A==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\r\n");
      out.write("    <!-- Slick 라이브러리 연결 -->\r\n");
      out.write("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.js\" integrity=\"sha512-XtmMtDEcNz2j7ekrtHvOVR4iwwaD6o/FUJe6+Zq+HgcCsk3kj4uSQQR8weQ2QVj1o0Pk6PwYLohm206ZzNfubg==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <!-- 전체 영역 -->\r\n");
      out.write("    <div class=\"wrap\">\r\n");
      out.write("\r\n");
      out.write("		<!-- 플로팅 버튼 영역 -->\r\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/floatingButton.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- 헤더 영역 -->\r\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <!-- 컨텐츠 영역 (개별 구현 구역) -->\r\n");
      out.write("        <div id=\"content_container\">\r\n");
      out.write("\r\n");
      out.write("            <!-- 최고 평점 TOP 5 -->\r\n");
      out.write("            <p class=\"main_text\">최고 평점 TOP 5</p>\r\n");
      out.write("            <button type=\"button\" id=\"top_rate_center\"></button>\r\n");
      out.write("            <div id=\"top_rate_container\">\r\n");
      out.write("            	");
 for(Movie m : movieHeader) { 
      out.write("\r\n");
      out.write("            		<div><img src=");
      out.print( m.getBackdropPath() );
      out.write("></div>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- 최신 게임 -->\r\n");
      out.write("            <p class=\"main_text\">가장 인기있는 콘텐츠 TOP 20</p>\r\n");
      out.write("            <div class=\"new_game_container\">\r\n");
      out.write("            	");

            		int num = 1;
                	String num_src;
                
      out.write("\r\n");
      out.write("            	");
 for(Movie m : moviePopular) { 
      out.write("\r\n");
      out.write("            		");
 num_src = "resources/image/common/" + num++ + ".png"; 
      out.write("\r\n");
      out.write("            		<div><a href=\"\"><img class=\"thumbnail\" src=");
      out.print( m.getPosterPath() );
      out.write("></a>\r\n");
      out.write("                    <img class=\"number\" src=");
      out.print( num_src );
      out.write("></div>\r\n");
      out.write("            	");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- 장르 검색 -->\r\n");
      out.write("            <p class=\"main_text\">신작 콘텐츠</p>\r\n");
      out.write("            <div class=\"genre_search_container\">\r\n");
      out.write("            	");
 for(Movie m : movieLatest) { 
      out.write("\r\n");
      out.write("            		<div><a href=\"\"><img class=\"thumbnail\" src=");
      out.print( m.getPosterPath() );
      out.write("></a></div>\r\n");
      out.write("            	");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- 최신 게임 -->\r\n");
      out.write("            <p class=\"main_text\">한다은님이 시청 중인 콘텐츠</p>\r\n");
      out.write("            <div class=\"genre_search_container\">\r\n");
      out.write("                ");
 for(Movie m : movieVideo) { 
      out.write("\r\n");
      out.write("            		<div>\r\n");
      out.write("            			<iframe width=\"100%\" height=\"350px\" src=\"https://www.youtube.com/embed/");
      out.print( m.getVideoKey() );
      out.write("\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n");
      out.write("            		</div>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- 장르 검색 -->\r\n");
      out.write("            <p class=\"main_text\">한다은님이 좋아할만한 공포 장르 콘텐츠</p>\r\n");
      out.write("            <div class=\"genre_search_container\">\r\n");
      out.write("                ");
 for(Movie m : movieGenre) { 
      out.write("\r\n");
      out.write("            		<div><a href=\"\"><img class=\"thumbnail\" src=");
      out.print( m.getPosterPath() );
      out.write("></a></div>\r\n");
      out.write("            	");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- 장르 검색 -->\r\n");
      out.write("            <p class=\"main_text\">한다은님이 좋아할만한 김감독 연출 콘텐츠</p>\r\n");
      out.write("            <div class=\"genre_search_container\">\r\n");
      out.write("                ");
 for(Movie m : movieDirector) { 
      out.write("\r\n");
      out.write("            		<div><a href=\"\"><img class=\"thumbnail\" src=");
      out.print( m.getPosterPath() );
      out.write("></a></div>\r\n");
      out.write("            	");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- 장르 검색 -->\r\n");
      out.write("            <p class=\"main_text\">한다은님이 좋아할만한 김배우 출연 콘텐츠</p>\r\n");
      out.write("            <div class=\"genre_search_container\">\r\n");
      out.write("                ");
 for(Movie m : movieCast) { 
      out.write("\r\n");
      out.write("            		<div><a href=\"\"><img class=\"thumbnail\" src=");
      out.print( m.getPosterPath() );
      out.write("></a></div>\r\n");
      out.write("            	");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- 푸터 영역 -->\r\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("	    $(function() {\r\n");
      out.write("\r\n");
      out.write("	        /* ===== 최고 평점 TOP 5 ===== */\r\n");
      out.write("\r\n");
      out.write("	        // 슬라이더 설정\r\n");
      out.write("	        $('#top_rate_container').slick({\r\n");
      out.write("	            autoplay: true,                 // 자동 재생\r\n");
      out.write("	            centerMode: true,               // 전후 슬라이드 함께 표시\r\n");
      out.write("	            centerPadding: \"9%\",           // 중앙 슬라이드 좌우 여백 (9%)\r\n");
      out.write("	            dots: true,                     // 페이징 버튼 표시\r\n");
      out.write("	            focusOnSelect: true             // 옆 슬라이드 클릭 시 센터로 이동시킴\r\n");
      out.write("	        });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	        /* ===== 최신 게임 ===== */\r\n");
      out.write("\r\n");
      out.write("	        // 슬라이더 설정\r\n");
      out.write("	        $('.new_game_container').slick({\r\n");
      out.write("	            autoplay: true,                 // 자동 재생\r\n");
      out.write("	            autoplaySpeed: 2000,            // 자동 재생 속도 설정 (2초)\r\n");
      out.write("	            dots: true,                     // 페이징 버튼 표시\r\n");
      out.write("	            slidesToShow: 5,                // 표시할 슬라이드 수 (4개)\r\n");
      out.write("	            slidesToScroll: 5,              // 한번에 넘길 슬라이드 수 (4개)\r\n");
      out.write("	            responsive: [                   // 반응형 설정\r\n");
      out.write("	                {\r\n");
      out.write("	                    breakpoint: 1500,       // 화면 가로 크기 1500(px) 될 경우\r\n");
      out.write("	                    settings: {\r\n");
      out.write("	                        slidesToShow: 3,    // 표시할 슬라이드 수 (3개)\r\n");
      out.write("	                        slidesToScroll: 3   // 한번에 넘길 슬라이드 수 (3개)\r\n");
      out.write("	                    }\r\n");
      out.write("	                }\r\n");
      out.write("	            ]\r\n");
      out.write("	        });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	        /* ===== 장르 검색 ===== */\r\n");
      out.write("\r\n");
      out.write("	        // 슬라이더 설정\r\n");
      out.write("	        $('.genre_search_container').slick({\r\n");
      out.write("	            autoplay: true,                 // 자동 재생\r\n");
      out.write("	            autoplaySpeed: 2000,            // 자동 재생 속도 설정 (2초)\r\n");
      out.write("	            dots: true,                     // 페이징 버튼 표시\r\n");
      out.write("	            slidesToShow: 5,                // 표시할 슬라이드 수 (4개)\r\n");
      out.write("	            slidesToScroll: 5,              // 한번에 넘길 슬라이드 수 (4개)\r\n");
      out.write("	            responsive: [                   // 반응형 설정\r\n");
      out.write("	                {\r\n");
      out.write("	                    breakpoint: 1500,       // 화면 가로 크기 1500(px) 될 경우\r\n");
      out.write("	                    settings: {\r\n");
      out.write("	                        slidesToShow: 3,    // 표시할 슬라이드 수 (3개)\r\n");
      out.write("	                        slidesToScroll: 3   // 한번에 넘길 슬라이드 수 (3개)\r\n");
      out.write("	                    }\r\n");
      out.write("	                }\r\n");
      out.write("	            ]\r\n");
      out.write("	        });\r\n");
      out.write("	    });\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
