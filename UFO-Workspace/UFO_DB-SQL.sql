---------------------------------------------------
-- 파이널 프로젝트 : UFO (Ur Favorite OTT)
---------------------------------------------------
-- 관리자계정에서 UFO 계정 생성 및 권한 부여
-- CREATE USER UFO IDENTIFIED BY UFO;
-- GRANT CONNECT, RESOURCE TO UFO;
---------------------------------------------------


---------------------------------------------------
-- TABLE 및 SEQUENCE 초기화

DROP TABLE REPORT;              -- 신고 테이블
DROP TABLE NOTICE;              -- 공지사항 테이블
DROP TABLE COMMUNITY_REPLY;     -- 커뮤니티 댓글 테이블
DROP TABLE COMMUNITY;           -- 커뮤니티 글 테이블
DROP TABLE PAYMENT_REGULAR;     -- 정기 결제 테이블
DROP TABLE PAYMENT;             -- 일반 결제 테이블
DROP TABLE REVIEW;              -- 별점·코멘트 테이블
DROP TABLE DIB;                 -- 찜 테이블
DROP TABLE RECORD;              -- 시청 내역 테이블
DROP TABLE EPISODE;             -- TV 에피소드 테이블
DROP TABLE TV;                  -- TV 프로그램 테이블
DROP TABLE MOVIE;               -- 영화 테이블
DROP TABLE MEMBER;                -- 회원 테이블

DROP SEQUENCE SEQ_USER_NO;      -- 회원 번호 시퀀스
DROP SEQUENCE SEQ_RECORD_NO;    -- 시청 내역 시퀀스
DROP SEQUENCE SEQ_REVIEW_NO;    -- 리뷰 등록 번호 시퀀스
DROP SEQUENCE SEQ_PAY_NO;       -- 일반 결제 번호 시퀀스
DROP SEQUENCE SEQ_REG_NO;       -- 정기 결제 번호 시퀀스
DROP SEQUENCE SEQ_COM_NO;       -- 커뮤니티 글 번호 시퀀스
DROP SEQUENCE SEQ_COM_RPL_NO;   -- 커뮤니티 댓글 번호 시퀀스
DROP SEQUENCE SEQ_NOTICE_NO;    -- 공지사항 번호 시퀀스
DROP SEQUENCE SEQ_REPORT_NO;    -- 신고 내역 번호 시퀀스


---------------------------------------------------
-- TABLE 및 SEQUENCE 생성 | 더미 데이터 INSERT

--------------------------------------------------
------------------- 회원 (MEMBER) ------------------
--------------------------------------------------
CREATE TABLE MEMBER (    
    USER_NO NUMBER CONSTRAINT USER_NO_PK PRIMARY KEY, 
    USER_ID VARCHAR2(40) CONSTRAINT USER_ID_NN NOT NULL CONSTRAINT USER_ID_UQ UNIQUE,
    USER_PWD VARCHAR2(200) CONSTRAINT USER_PWD_NN NOT NULL,
    USER_NICKNAME VARCHAR2(50) CONSTRAINT USER_NICKNAME_NN NOT NULL CONSTRAINT USER_NICKNAME_UQ UNIQUE,
    USER_PROFILE NUMBER DEFAULT 1 CONSTRAINT USER_PROFILE_NN NOT NULL,
    USER_ENROLL_DATE DATE DEFAULT SYSDATE CONSTRAINT USER_ENROLL_DATE_NN NOT NULL,
    USER_STATUS CHAR(1) DEFAULT 'Y' CONSTRAINT USER_STATUS_NN NOT NULL CONSTRAINT USER_STATUS_CK CHECK(USER_STATUS IN ('Y', 'N'))
);

COMMENT ON COLUMN MEMBER.USER_NO IS '회원번호';
COMMENT ON COLUMN MEMBER.USER_ID IS '회원아이디';
COMMENT ON COLUMN MEMBER.USER_PWD IS '회원비밀번호';
COMMENT ON COLUMN MEMBER.USER_NICKNAME IS '회원닉네임';
COMMENT ON COLUMN MEMBER.USER_PROFILE IS '회원프로필사진';
COMMENT ON COLUMN MEMBER.USER_ENROLL_DATE IS '회원가입일시';
COMMENT ON COLUMN MEMBER.USER_STATUS IS '회원상태';
    
CREATE SEQUENCE SEQ_USER_NO NOCACHE;

INSERT INTO MEMBER    -- 0 (관리자) : kh3aliens
VALUES (0, 'urfavoriteott@gmail.com', '$2a$10$Q0nFH3v.9EuSDK5uyOz50eVHr4LfF223y3q2zIQfHIVj8uf70Mfmm', 'UrFavoriteOTT', 0, TO_DATE('2020/01/01 00:00:00', 'RRRR/MM/DD HH24:MI:SS'), 'Y');

INSERT INTO MEMBER    -- 1 (한다은) : doitdoit22
VALUES (SEQ_USER_NO.NEXTVAL, 'zkalkal27@gmail.com', '$2a$10$RUSc.NiEjWs1dK0E9oonheHgtG2prn3XGO.JOdJyiD4Ca2e6rF.gu', 'RayJun', 2, TO_DATE('2020/01/02 12:27:46', 'RRRR/MM/DD HH24:MI:SS'), 'Y');

INSERT INTO MEMBER    -- 2 (김수빈) : kingodpuppy
VALUES (SEQ_USER_NO.NEXTVAL, 'shallwetyping@gmail.com', '$2a$10$/Mp49QTJC/Br98BjR/QZze/RanZujr922A98NmiBz1MRZJoKL.k3e', '천재강쥐', 7, TO_DATE('2020/01/02 16:45:02', 'RRRR/MM/DD HH24:MI:SS'), 'Y');

INSERT INTO MEMBER    -- 3 (박성현) : backendgod
VALUES (SEQ_USER_NO.NEXTVAL, 'pshysd@kakao.com', '$2a$10$NDayBSUEdb5mHx/DgjiTJuw7zYfGv39TeVF9mxLI.XSnxn9i13vJG', 'pshysd', 4, TO_DATE('2020/01/03 02:19:33', 'RRRR/MM/DD HH24:MI:SS'), 'Y');

INSERT INTO MEMBER    -- 4 (신동민) : yesman1838
VALUES (SEQ_USER_NO.NEXTVAL, 'dongmin1838@gmail.com', '$2a$10$o9nL0Jtnh0chohb0JwgeVetD0rxsUGYcsvlHVWfe9dBEWB/R8yI0a', 'dongmin38', 3, TO_DATE('2020/01/03 21:04:37', 'RRRR/MM/DD HH24:MI:SS'), 'Y');

INSERT INTO MEMBER    -- 5 (장희연) : frontendgod
VALUES (SEQ_USER_NO.NEXTVAL, 'loveve1993@gmail.com', '$2a$10$9b7ojHZGwaxSyl0neF2LceXH/bTqwREZhVt2zxYsJpmsqYkbhGAre', 'hyne993', 9, TO_DATE('2020/01/04 09:59:25', 'RRRR/MM/DD HH24:MI:SS'), 'Y');

INSERT INTO MEMBER    -- 6 (황혜진) : cheerleader
VALUES (SEQ_USER_NO.NEXTVAL, 'heajin0903@gmail.com', '$2a$10$3tZzygbS7UpvRhPWCf0Rn.3PxmtCp92/7ewlvbX1WgN39Idtd8yY.', 'Ardbeg22', 10, TO_DATE('2020/01/04 14:19:36', 'RRRR/MM/DD HH24:MI:SS'), 'Y');

INSERT INTO MEMBER    -- 7 [탈퇴1] : xx4960ifg
VALUES (SEQ_USER_NO.NEXTVAL, 'saloy23651@hoxds.com', '$2a$10$HCoYXyfj60ozZzqusBsYt.Pt/PUlk0L.MWea6aaNWSzDCboGa224i', '간다', 1, TO_DATE('2020/01/05 07:27:21', 'RRRR/MM/DD HH24:MI:SS'), 'N');

INSERT INTO MEMBER    -- 8 (테스트1) : doit44@
VALUES (SEQ_USER_NO.NEXTVAL, 'zjkalkal27@gmail.com', '$2a$10$jI5/ng9JRk0HqFeZZ31iCuTOo3.46dBNLzWU4GLzsCFZs9BstnNzm', '부계정', 5, TO_DATE('2020/01/05 11:48:09', 'RRRR/MM/DD HH24:MI:SS'), 'Y');

INSERT INTO MEMBER    -- 9 [탈퇴2] : SaveMe
VALUES (SEQ_USER_NO.NEXTVAL, 'mijix47104@hoxds.com', '$2a$10$.gnw/jk64.pvbBftvQbvnOIspCQI807gsIiYJrbYQF8dytOuEYN3i', '살려줘', 2, TO_DATE('2020/01/05 19:12:29', 'RRRR/MM/DD HH24:MI:SS'), 'N');

INSERT INTO MEMBER    -- 10 (테스트2) : doit77*
VALUES (SEQ_USER_NO.NEXTVAL, 'rayjun_ddubi@naver.com', '$2a$10$a00mc5arZmmEjD3rCDywreZcq6HiXE.Mtodp8mvqRcg78N8aB.woC', '부부계정', 6, TO_DATE('2020/01/07 15:34:38', 'RRRR/MM/DD HH24:MI:SS'), 'Y');

INSERT INTO MEMBER    -- 11 [활동1] : dsfjh38
VALUES (SEQ_USER_NO.NEXTVAL, 'daceciw345@ktasy.com', '$2a$10$S8lyAbVkz2rKh6c4nof75ewwNSWTNVFsbV6.UJmteJ7rCe7MsC0KG', '영화만봄', 8, TO_DATE('2020/01/07 17:52:17', 'RRRR/MM/DD HH24:MI:SS'), 'Y');

INSERT INTO MEMBER    -- 12 [활동2] : KillMe
VALUES (SEQ_USER_NO.NEXTVAL, 'tagome6500@keshitv.com', '$2a$10$d.nbsbSgpT4c7ZYPxk5Wfeihaw5RkyqsZDC94oLSMWUBpPs4C.e/C', '오마이캡틴', 5, TO_DATE('2020/01/07 22:48:41', 'RRRR/MM/DD HH24:MI:SS'), 'Y');


--------------------------------------------------
------------------ 영화 (MOVIE) ------------------
--------------------------------------------------
CREATE TABLE MOVIE (
    MOVIE_ID NUMBER CONSTRAINT MOVIE_ID_PK PRIMARY KEY, 
    ORIGINAL_TITLE VARCHAR2(200) CONSTRAINT MOVIE_ORIGINAL_TITLE_NN NOT NULL,
    TITLE VARCHAR2(200) CONSTRAINT MOVIE_TITLE_NN NOT NULL,
    GENRES VARCHAR2(100) CONSTRAINT MOVIE_GENRES_NN NOT NULL,
    TAGLINE VARCHAR2(200) CONSTRAINT MOVIE_TAGLINE_NN NOT NULL,
    OVERVIEW VARCHAR2(4000) CONSTRAINT MOVIE_OVERVIEW_NN NOT NULL,
    RUNTIME NUMBER CONSTRAINT MOVIE_RUNTIME_NN NOT NULL,
    RELEASE_DATE DATE CONSTRAINT MOVIE_RELEASE_DATE_NN NOT NULL,
    DIRECTOR VARCHAR2(200) CONSTRAINT MOVIE_DIRECTOR_NN NOT NULL,
    CAST VARCHAR2(200) CONSTRAINT MOVIE_CAST_NN NOT NULL,
    CERTIFICATION NUMBER CONSTRAINT MOVIE_CERTIFICATION_NN NOT NULL,
    PRODUCTION_NAME VARCHAR2(100) CONSTRAINT MOVIE_PRODUCTION_NAME_NN NOT NULL,
    PRODUCTION_COUNTRY VARCHAR2(50) CONSTRAINT MOVIE_PRODUCTION_COUNTRY_NN NOT NULL,
    PRODUCTION_LOGO_PATH VARCHAR2(50) CONSTRAINT MOVIE_PRODUCTION_LOGO_PATH_NN NOT NULL,
    COLLECTION_ID NUMBER,
    COLLECTION_NAME VARCHAR2(100),
    BACKDROP_PATH VARCHAR2(50) CONSTRAINT MOVIE_BACKDROP_PATH_NN NOT NULL,
    POSTER_PATH VARCHAR2(50) CONSTRAINT MOVIE_POSTER_PATH_NN NOT NULL,
    VIDEO_KEY VARCHAR2(20) CONSTRAINT MOVIE_VIDEO_KEY_NN NOT NULL,
    VIEWS NUMBER DEFAULT 0 CONSTRAINT MOVIE_VIEWS_NN NOT NULL,
    REGISTER_DATE DATE DEFAULT SYSDATE CONSTRAINT MOVIE_REGISTER_DATE_NN NOT NULL,
    MOVIE_STATUS CHAR(1) DEFAULT 'Y' CONSTRAINT MOVIE_STATUS_NN NOT NULL CONSTRAINT MOVIE_STATUS_CK CHECK(MOVIE_STATUS IN ('Y', 'N')),
    DELETE_DATE DATE
);

COMMENT ON COLUMN MOVIE.MOVIE_ID IS '영화ID';
COMMENT ON COLUMN MOVIE.ORIGINAL_TITLE IS '원제';
COMMENT ON COLUMN MOVIE.TITLE IS '한글제목';
COMMENT ON COLUMN MOVIE.GENRES IS '장르';
COMMENT ON COLUMN MOVIE.TAGLINE IS '요약';
COMMENT ON COLUMN MOVIE.OVERVIEW IS '개요';
COMMENT ON COLUMN MOVIE.RUNTIME IS '러닝타임';
COMMENT ON COLUMN MOVIE.RELEASE_DATE IS '개봉일자';
COMMENT ON COLUMN MOVIE.DIRECTOR IS '연출진';
COMMENT ON COLUMN MOVIE.CAST IS '출연진';
COMMENT ON COLUMN MOVIE.CERTIFICATION IS '시청등급';
COMMENT ON COLUMN MOVIE.PRODUCTION_NAME IS '제작사이름';
COMMENT ON COLUMN MOVIE.PRODUCTION_COUNTRY IS '제작국가이름';
COMMENT ON COLUMN MOVIE.PRODUCTION_LOGO_PATH IS '제작사로고사진주소';
COMMENT ON COLUMN MOVIE.COLLECTION_ID IS '컬렉션ID';
COMMENT ON COLUMN MOVIE.COLLECTION_NAME IS '컬렉션이름';
COMMENT ON COLUMN MOVIE.BACKDROP_PATH IS '배너사진주소';
COMMENT ON COLUMN MOVIE.POSTER_PATH IS '포스터사진주소';
COMMENT ON COLUMN MOVIE.VIDEO_KEY IS '영상주소';
COMMENT ON COLUMN MOVIE.VIEWS IS '조회수';
COMMENT ON COLUMN MOVIE.REGISTER_DATE IS '등록일시';
COMMENT ON COLUMN MOVIE.MOVIE_STATUS IS '공개여부';
COMMENT ON COLUMN MOVIE.DELETE_DATE IS '삭제일시';

INSERT INTO MOVIE
VALUES (1427, 'Perfume: The Story of a Murderer', '향수: 어느 살인자의 이야기', '범죄,판타지,드라마', '그에게 향기는 전부였고, 살인은 운명이었다',
'18세기 프랑스, 악취나는 생선 시장에서 태어나자마자 고아가 된 천재적인 후각의 소유자 장 바티스트 그르누이(벤 위쇼). 난생 처음 파리를 방문한 날, 그르누이는 지금껏 경험하지 못했던 여인의 매혹적인 향기에 끌린다. 그 향기를 소유하고 싶은 강렬한 욕망에 사로잡힌 그는 향수제조사 주세페 발디니(더스틴 호프만)를 만나 향수 제조 방법을 배워나간다. 파리를 떠나 향수의 낙원이라 불리는 프랑스 남동부의  그라스에서 본격적으로 향수를 만드는 기술을 배우는 그르누이. 한편 그라스에서는 아름다운 여인들이 머리카락을 모두 잘린 채 나체의 시신으로 발견되는 의문의 살인 사건들이 연이어 발생하는데...'
      , 147, '2006-09-13', 'Tom Tykwer', 'Ben Whishaw,Alan Rickman,Rachel Hurd-Wood,Dustin Hoffman,John Hurt', 15, 'DreamWorks Pictures', 'US', '/vru2SssLX3FPhnKZGtYw00pVIS9.png'
      , NULL, NULL, '/kgHYRHQ5BZM1mxsy1MSZepNjMiR.jpg', '/zHwYCk0YVFdTH0icIHsXGCV6Min.jpg', '-hr3ouA26nU', 4, TO_DATE('2020/01/01 00:00:00', 'RRRR/MM/DD HH24:MI:SS'), 'Y', NULL);


--------------------------------------------------
---------------- TV 프로그램 (TV) ----------------
--------------------------------------------------
CREATE TABLE TV (
    TV_ID NUMBER CONSTRAINT TV_ID_PK PRIMARY KEY, 
    ORIGINAL_NAME VARCHAR2(200) CONSTRAINT TV_ORIGINAL_NAME_NN NOT NULL,
    NAME VARCHAR2(200) CONSTRAINT TV_NAME_NN NOT NULL,
    GENRES VARCHAR2(100) CONSTRAINT TV_GENRES_NN NOT NULL,
    TAGLINE VARCHAR2(200) CONSTRAINT TV_TAGLINE_NN NOT NULL,
    OVERVIEW VARCHAR2(4000) CONSTRAINT TV_OVERVIEW_NN NOT NULL,
    EPISODE_COUNT NUMBER CONSTRAINT TV_EPISODE_COUNT_NN NOT NULL,
    AIR_DATE DATE CONSTRAINT TV_AIR_DATE_NN NOT NULL,
    CREATOR VARCHAR2(200) CONSTRAINT TV_CREATOR_NN NOT NULL,
    CAST VARCHAR2(200) CONSTRAINT TV_CAST_NN NOT NULL,
    RATING NUMBER CONSTRAINT TV_RATING_NN NOT NULL,
    NETWORKS_NAME VARCHAR2(100) CONSTRAINT TV_NETWORKS_NAME_NN NOT NULL,
    NETWORKS_COUNTRY VARCHAR2(50) CONSTRAINT TV_NETWORKS_COUNTRY_NN NOT NULL,
    NETWORKS_LOGO_PATH VARCHAR2(50) CONSTRAINT TV_NETWORKS_LOGO_PATH_NN NOT NULL,
    SEASON_NUMBER NUMBER CONSTRAINT TV_SEASON_NUMBER_NN NOT NULL,
    BACKDROP_PATH VARCHAR2(50) CONSTRAINT TV_BACKDROP_PATH_NN NOT NULL,
    POSTER_PATH VARCHAR2(50) CONSTRAINT TV_POSTER_PATH_NN NOT NULL,
    VIEWS NUMBER DEFAULT 0 CONSTRAINT TV_VIEWS_NN NOT NULL,
    REGISTER_DATE DATE DEFAULT SYSDATE CONSTRAINT TV_REGISTER_DATE_NN NOT NULL,
    TV_STATUS CHAR(1) DEFAULT 'Y' CONSTRAINT TV_STATUS_NN NOT NULL CONSTRAINT TV_STATUS_CK CHECK(TV_STATUS IN ('Y', 'N')),
    DELETE_DATE DATE
);

COMMENT ON COLUMN TV.TV_ID IS 'TV프로그램ID';
COMMENT ON COLUMN TV.ORIGINAL_NAME IS '원제';
COMMENT ON COLUMN TV.NAME IS '한글제목';
COMMENT ON COLUMN TV.GENRES IS '장르';
COMMENT ON COLUMN TV.TAGLINE IS '요약';
COMMENT ON COLUMN TV.OVERVIEW IS '개요';
COMMENT ON COLUMN TV.EPISODE_COUNT IS '총회차수';
COMMENT ON COLUMN TV.AIR_DATE IS '방영시작일자';
COMMENT ON COLUMN TV.CREATOR IS '연출진';
COMMENT ON COLUMN TV.CAST IS '출연진';
COMMENT ON COLUMN TV.RATING IS '시청등급';
COMMENT ON COLUMN TV.NETWORKS_NAME IS '방송사이름';
COMMENT ON COLUMN TV.NETWORKS_COUNTRY IS '방송국가이름';
COMMENT ON COLUMN TV.NETWORKS_LOGO_PATH IS '방송사로고사진주소';
COMMENT ON COLUMN TV.SEASON_NUMBER IS '시즌';
COMMENT ON COLUMN TV.BACKDROP_PATH IS '배너사진주소';
COMMENT ON COLUMN TV.POSTER_PATH IS '포스터사진주소';
COMMENT ON COLUMN TV.VIEWS IS '조회수';
COMMENT ON COLUMN TV.REGISTER_DATE IS '등록일시';
COMMENT ON COLUMN TV.TV_STATUS IS '공개여부';
COMMENT ON COLUMN TV.DELETE_DATE IS '삭제일시';


--------------------------------------------------
-------------- TV 에피소드 (EPISODE) -------------
--------------------------------------------------
CREATE TABLE EPISODE (
    EPISODE_ID NUMBER CONSTRAINT EPISODE_ID_PK PRIMARY KEY, 
    TV_ID NUMBER CONSTRAINT EPISODE_TV_ID_NN NOT NULL,
    SEASON_NUMBER NUMBER CONSTRAINT EPISODE_SEASON_NUMBER_NN NOT NULL,
    EPISODE_NUMBER NUMBER CONSTRAINT EPISODE_NUMBER_NN NOT NULL,
    NAME VARCHAR2(200) CONSTRAINT EPISODE_NAME_NN NOT NULL,
    OVERVIEW VARCHAR2(4000) CONSTRAINT EPISODE_OVERVIEW_NN NOT NULL,
    RUNTIME NUMBER CONSTRAINT EPISODE_RUNTIME_NN NOT NULL,
    AIR_DATE DATE CONSTRAINT EPISODE_AIR_DATE_NN NOT NULL,
    STILL_PATH VARCHAR2(50) CONSTRAINT EPISODE_STILL_PATH_NN NOT NULL,
    VIDEO_KEY VARCHAR2(20) CONSTRAINT EPISODE_VIDEO_KEY_NN NOT NULL,
    REGISTER_DATE DATE DEFAULT SYSDATE CONSTRAINT EPISODE_REGISTER_DATE_NN NOT NULL,
    EPISODE_STATUS CHAR(1) DEFAULT 'Y' CONSTRAINT EPISODE_STATUS_NN NOT NULL CONSTRAINT EPISODE_STATUS_CK CHECK(EPISODE_STATUS IN ('Y', 'N')),
    DELETE_DATE DATE, 
    CONSTRAINT EPISODE_TV_ID_FK FOREIGN KEY (TV_ID) REFERENCES TV(TV_ID)
);

COMMENT ON COLUMN EPISODE.EPISODE_ID IS 'TV에피소드ID';
COMMENT ON COLUMN EPISODE.TV_ID IS 'TV프로그램ID';
COMMENT ON COLUMN EPISODE.SEASON_NUMBER IS '시즌';
COMMENT ON COLUMN EPISODE.EPISODE_NUMBER IS '회차';
COMMENT ON COLUMN EPISODE.NAME IS '제목';
COMMENT ON COLUMN EPISODE.OVERVIEW IS '개요';
COMMENT ON COLUMN EPISODE.RUNTIME IS '러닝타임';
COMMENT ON COLUMN EPISODE.AIR_DATE IS '방영일자';
COMMENT ON COLUMN EPISODE.STILL_PATH IS '스틸사진주소';
COMMENT ON COLUMN EPISODE.VIDEO_KEY IS '영상주소';
COMMENT ON COLUMN EPISODE.REGISTER_DATE IS '등록일시';
COMMENT ON COLUMN EPISODE.EPISODE_STATUS IS '공개여부';
COMMENT ON COLUMN EPISODE.DELETE_DATE IS '삭제일시';


--------------------------------------------------
--------------- 시청 내역 (RECORD) ---------------
--------------------------------------------------
CREATE TABLE RECORD (
    RECORD_NO NUMBER CONSTRAINT RECORD_NO_PK PRIMARY KEY,
    USER_NO NUMBER CONSTRAINT RECORD_USER_NO_NN NOT NULL,
    MOVIE_ID NUMBER,
    EPISODE_ID NUMBER,
    RECORD_TIME NUMBER CONSTRAINT RECORD_TIME_NN NOT NULL,
    RECORD_STATUS CHAR(1) DEFAULT 'Y' CONSTRAINT RECORD_STATUS_NN NOT NULL CONSTRAINT RECORD_STATUS_CK CHECK(RECORD_STATUS IN ('Y', 'N')),
    CONSTRAINT RECORD_USER_NO_FK FOREIGN KEY (USER_NO) REFERENCES MEMBER(USER_NO),
    CONSTRAINT RECORD_MOVIE_ID_FK FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE(MOVIE_ID),
    CONSTRAINT RECORD_EPISODE_ID_FK FOREIGN KEY (EPISODE_ID) REFERENCES EPISODE(EPISODE_ID)
);
    
COMMENT ON COLUMN RECORD.RECORD_NO IS '시청내역번호';
COMMENT ON COLUMN RECORD.USER_NO IS '시청한회원번호';
COMMENT ON COLUMN RECORD.MOVIE_ID IS '시청한영화ID';
COMMENT ON COLUMN RECORD.EPISODE_ID IS '시청한TV에피소드ID';
COMMENT ON COLUMN RECORD.RECORD_TIME IS '마지막시청구간';
COMMENT ON COLUMN RECORD.RECORD_STATUS IS '공개여부';
        
CREATE SEQUENCE SEQ_RECORD_NO NOCACHE;


--------------------------------------------------
-------------------- 찜 (DIB) --------------------
--------------------------------------------------
CREATE TABLE DIB (
    USER_NO NUMBER CONSTRAINT DIB_USER_NO_NN NOT NULL,
    MOVIE_ID NUMBER,
    TV_ID NUMBER,
    CONSTRAINT DIB_USER_NO_FK FOREIGN KEY (USER_NO) REFERENCES MEMBER(USER_NO),
    CONSTRAINT DIB_MOVIE_ID_FK FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE(MOVIE_ID),
    CONSTRAINT DIB_TV_ID_FK FOREIGN KEY (TV_ID) REFERENCES TV(TV_ID)
);

COMMENT ON COLUMN DIB.USER_NO IS '찜한회원번호';
COMMENT ON COLUMN DIB.MOVIE_ID IS '찜한영화ID';
COMMENT ON COLUMN DIB.TV_ID IS '찜한TV프로그램ID';


--------------------------------------------------
-------------- 별점·코멘트 (REVIEW) -------------
--------------------------------------------------
CREATE TABLE REVIEW (
    REVIEW_NO NUMBER CONSTRAINT REVIEW_NO_PK PRIMARY KEY,
    USER_NO NUMBER CONSTRAINT REVIEW_USER_NO_NN NOT NULL,
    MOVIE_ID NUMBER,
    TV_ID NUMBER,
    REVIEW_STAR NUMBER CONSTRAINT REVIEW_STAR_NN NOT NULL,
    REVIEW_CONTENT VARCHAR2(4000),
    REVIEW_REGISTER_DATE DATE DEFAULT SYSDATE CONSTRAINT REVIEW_REGISTER_DATE_NN NOT NULL,
    REVIEW_STATUS CHAR(1) DEFAULT 'Y' CONSTRAINT REVIEW_STATUS_NN NOT NULL CONSTRAINT REVIEW_STATUS_CK CHECK(REVIEW_STATUS IN ('Y', 'N')),
    CONSTRAINT REVIEW_USER_NO_FK FOREIGN KEY (USER_NO) REFERENCES MEMBER(USER_NO),
    CONSTRAINT REVIEW_MOVIE_ID_FK FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE(MOVIE_ID),
    CONSTRAINT REVIEW_TV_ID_FK FOREIGN KEY (TV_ID) REFERENCES TV(TV_ID) 
);

COMMENT ON COLUMN REVIEW.REVIEW_NO IS '리뷰작성번호';
COMMENT ON COLUMN REVIEW.USER_NO IS '작성자회원번호';
COMMENT ON COLUMN REVIEW.MOVIE_ID IS '작성한영화ID';
COMMENT ON COLUMN REVIEW.TV_ID IS '작성한TV프로그램ID';
COMMENT ON COLUMN REVIEW.REVIEW_STAR IS '별점';
COMMENT ON COLUMN REVIEW.REVIEW_CONTENT IS '코멘트';
COMMENT ON COLUMN REVIEW.REVIEW_REGISTER_DATE IS '리뷰작성일시';
COMMENT ON COLUMN REVIEW.REVIEW_STATUS IS '공개여부';

CREATE SEQUENCE SEQ_REVIEW_NO NOCACHE;

INSERT INTO REVIEW
VALUES (SEQ_REVIEW_NO.NEXTVAL, 2, 1427, NULL, 4.5,
'책을 원작으로 둔 영화 중에 탑인 듯 주인공의 도덕성 결여 때문에 속이 거북해서 0.5점 뺐지만 이건 취향을 넘어 개인적인 감정(?)이고 영화 미장센이 너무너무 좋아서 이 책 다시 읽고 싶다는 생각이 듦'
      , TO_DATE('2020/01/02 20:08:45', 'RRRR/MM/DD HH24:MI:SS'), 'Y');
      
INSERT INTO REVIEW
VALUES (SEQ_REVIEW_NO.NEXTVAL, 1, 1427, NULL, 4.5,
'아이러니하게도 지금의 우리도 주인공과 다를바없지않은가

진정한 자신의 향, 자아를 가지기보단 성공의 향 부의향 인기의 향을 추구하는 현대의의 모습이라고 부정은 하지 못 할것이다.'
      , TO_DATE('2020/01/06 21:45:38', 'RRRR/MM/DD HH24:MI:SS'), 'Y');
      
INSERT INTO REVIEW
VALUES (SEQ_REVIEW_NO.NEXTVAL, 6, 1427, NULL, 5.0,
'마음 속에서 진정으로 원했던 ‘사랑’
-
이란 감정에 뒤늦게 깨달은 그의 눈물과 마지막 모습은 영원히 잊지 못할 장면.'
      , TO_DATE('2020/01/06 22:21:41', 'RRRR/MM/DD HH24:MI:SS'), 'Y');
      
INSERT INTO REVIEW
VALUES (SEQ_REVIEW_NO.NEXTVAL, 3, 1427, NULL, 0.5,
'야 이게 아름답냐?'
      , TO_DATE('2020/01/21 01:05:19', 'RRRR/MM/DD HH24:MI:SS'), 'Y');


--------------------------------------------------
--------------- 일반 결제 (PAYMENT) --------------	
--------------------------------------------------
CREATE TABLE PAYMENT (
    PAY_NO NUMBER CONSTRAINT PAY_NO_PK PRIMARY KEY,
    PAY_ORDER_NO NUMBER CONSTRAINT PAY_ORDER_NO_NN NOT NULL,
    USER_NO NUMBER CONSTRAINT PAY_USER_NO_NN NOT NULL,
    PAYMENT NUMBER CONSTRAINT PAYMENT_NN NOT NULL,
    PAY_DATE DATE DEFAULT SYSDATE CONSTRAINT PAY_DATE_NN NOT NULL,
    PAY_END_DATE DATE DEFAULT SYSDATE+30 CONSTRAINT PAY_END_DATE_NN NOT NULL,
    PAY_STATUS CHAR(1) DEFAULT 'Y' CONSTRAINT PAY_STATUS_NN NOT NULL CONSTRAINT PAY_STATUS_CK CHECK(PAY_STATUS IN ('Y', 'N')),
    PAY_URL VARCHAR2(100) CONSTRAINT PAY_URL_NN NOT NULL,
    CONSTRAINT PAY_USER_NO_FK FOREIGN KEY (USER_NO) REFERENCES MEMBER(USER_NO)
);

COMMENT ON COLUMN PAYMENT.PAY_NO IS '일반결제내역번호';
COMMENT ON COLUMN PAYMENT.PAY_ORDER_NO IS '일반결제번호';
COMMENT ON COLUMN PAYMENT.USER_NO IS '결제한회원번호';
COMMENT ON COLUMN PAYMENT.PAYMENT IS '일반결제액';
COMMENT ON COLUMN PAYMENT.PAY_DATE IS '일반결제일시';
COMMENT ON COLUMN PAYMENT.PAY_END_DATE IS '일반권종료일시';
COMMENT ON COLUMN PAYMENT.PAY_STATUS IS '일반결제상태';
COMMENT ON COLUMN PAYMENT.PAY_URL IS '일반결제영수증URL';

CREATE SEQUENCE SEQ_PAY_NO NOCACHE;


--------------------------------------------------
----------- 정기 결제 (PAYMENT_REGULAR) ----------
--------------------------------------------------
CREATE TABLE PAYMENT_REGULAR (
    REG_NO NUMBER CONSTRAINT REG_NO_PK PRIMARY KEY,
    REG_ORDER_NO NUMBER CONSTRAINT REG_ORDER_NO_NN NOT NULL,
    USER_NO NUMBER CONSTRAINT REG_USER_NO_NN NOT NULL,
    REG_PAYMENT NUMBER CONSTRAINT REG_PAYMENT_NN NOT NULL,
    REG_START_DATE DATE DEFAULT SYSDATE CONSTRAINT REG_START_DATE_NN NOT NULL,
    REG_END_DATE DATE DEFAULT SYSDATE+30 CONSTRAINT REG_END_DATE_NN NOT NULL,
    REG_STATUS CHAR(1) DEFAULT 'Y' CONSTRAINT REG_STATUS_NN NOT NULL CONSTRAINT REG_STATUS_CK CHECK(REG_STATUS IN ('Y', 'N')),
    REG_URL VARCHAR2(100) CONSTRAINT REG_URL_NN NOT NULL,
    CONSTRAINT REG_USER_NO_FK FOREIGN KEY (USER_NO) REFERENCES MEMBER(USER_NO)
);

COMMENT ON COLUMN PAYMENT_REGULAR.REG_NO IS '정기결제내역번호';
COMMENT ON COLUMN PAYMENT_REGULAR.REG_ORDER_NO IS '정기결제번호';
COMMENT ON COLUMN PAYMENT_REGULAR.USER_NO IS '결제한회원번호';
COMMENT ON COLUMN PAYMENT_REGULAR.REG_PAYMENT IS '정기결제액';
COMMENT ON COLUMN PAYMENT_REGULAR.REG_START_DATE IS '정기결제시작일시';
COMMENT ON COLUMN PAYMENT_REGULAR.REG_END_DATE IS '정기결제종료일시';
COMMENT ON COLUMN PAYMENT_REGULAR.REG_STATUS IS '정기결제상태';
COMMENT ON COLUMN PAYMENT_REGULAR.REG_URL IS '정기결제영수증URL';

CREATE SEQUENCE SEQ_REG_NO NOCACHE;


--------------------------------------------------
------------- 커뮤니티 글 (COMMUNITY) ------------
--------------------------------------------------
CREATE TABLE COMMUNITY (    
    COM_NO NUMBER CONSTRAINT COM_NO_PK PRIMARY KEY,
    MOVIE_ID NUMBER,
    TV_ID NUMBER,
    USER_NO NUMBER CONSTRAINT COM_USER_NO_NN NOT NULL,
    COM_TITLE VARCHAR2(100) CONSTRAINT COM_TITLE_NN NOT NULL,
    COM_CONTENT VARCHAR2(4000) CONSTRAINT COM_CONTENT_NN NOT NULL,
    COM_REGISTER_DATE DATE DEFAULT SYSDATE CONSTRAINT COM_REGISTER_DATE_NN NOT NULL,
    COM_HIT NUMBER DEFAULT 0 CONSTRAINT COM_HIT_NN NOT NULL,
    COM_STATUS CHAR(1) DEFAULT 'Y' CONSTRAINT COM_STATUS_NN NOT NULL CONSTRAINT COM_STATUS_CK CHECK(COM_STATUS IN ('Y', 'N')),
    CONSTRAINT COM_MOVIE_ID_FK FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE(MOVIE_ID),
    CONSTRAINT COM_TV_ID_FK FOREIGN KEY (TV_ID) REFERENCES TV(TV_ID),
    CONSTRAINT COM_USER_NO_FK FOREIGN KEY (USER_NO) REFERENCES MEMBER(USER_NO)
);

COMMENT ON COLUMN COMMUNITY.COM_NO IS '커뮤니티글번호';
COMMENT ON COLUMN COMMUNITY.MOVIE_ID IS '태그한영화ID';
COMMENT ON COLUMN COMMUNITY.TV_ID IS '태그한TV프로그램ID';
COMMENT ON COLUMN COMMUNITY.USER_NO IS '작성한회원번호';
COMMENT ON COLUMN COMMUNITY.COM_TITLE IS '커뮤니티글제목';
COMMENT ON COLUMN COMMUNITY.COM_CONTENT IS '커뮤니티글내용';
COMMENT ON COLUMN COMMUNITY.COM_REGISTER_DATE IS '커뮤니티글작성일시';
COMMENT ON COLUMN COMMUNITY.COM_HIT IS '커뮤니티글조회수';
COMMENT ON COLUMN COMMUNITY.COM_STATUS IS '공개여부';

CREATE SEQUENCE SEQ_COM_NO NOCACHE;


--------------------------------------------------
--------- 커뮤니티 댓글 (COMMUNITY_REPLY) --------
--------------------------------------------------
CREATE TABLE COMMUNITY_REPLY (
    COM_RPL_NO NUMBER CONSTRAINT COM_RPL_NO_PK PRIMARY KEY,
    COM_NO NUMBER CONSTRAINT COM_RPL_COM_NO_NN NOT NULL,
    USER_NO NUMBER CONSTRAINT COM_RPL_USER_NO_NN NOT NULL,
    COM_RPL_CONTENT VARCHAR2(4000) CONSTRAINT COM_RPL_CONTENT_NN NOT NULL,
    COM_RPL_REGISTER_DATE DATE DEFAULT SYSDATE CONSTRAINT COM_RPL_REGISTER_DATE_NN NOT NULL,
    COM_RPL_STATUS CHAR(1) DEFAULT 'Y' CONSTRAINT COM_RPL_STATUS_NN NOT NULL CONSTRAINT COM_RPL_STATUS_CK CHECK(COM_RPL_STATUS IN ('Y', 'N')),
    CONSTRAINT COM_RPL_COM_NO_FK FOREIGN KEY (COM_NO) REFERENCES COMMUNITY(COM_NO),
    CONSTRAINT COM_RPL_USER_NO_FK FOREIGN KEY (USER_NO) REFERENCES MEMBER(USER_NO)
);

COMMENT ON COLUMN COMMUNITY_REPLY.COM_RPL_NO IS '커뮤니티댓글번호';
COMMENT ON COLUMN COMMUNITY_REPLY.COM_NO IS '작성한글번호';
COMMENT ON COLUMN COMMUNITY_REPLY.USER_NO IS '작성한회원번호';
COMMENT ON COLUMN COMMUNITY_REPLY.COM_RPL_CONTENT IS '커뮤니티댓글내용';
COMMENT ON COLUMN COMMUNITY_REPLY.COM_RPL_REGISTER_DATE IS '커뮤니티댓글작성일시';
COMMENT ON COLUMN COMMUNITY_REPLY.COM_RPL_STATUS IS '공개여부';

CREATE SEQUENCE SEQ_COM_RPL_NO NOCACHE;


--------------------------------------------------
---------------- 공지사항 (NOTICE) ---------------
--------------------------------------------------
CREATE TABLE NOTICE (
    NOTICE_NO NUMBER CONSTRAINT NOTICE_NO_PK PRIMARY KEY,
    NOTICE_TITLE VARCHAR2(100) CONSTRAINT NOTICE_TITLE_NN NOT NULL,
    NOTICE_CONTENT VARCHAR2(4000) CONSTRAINT NOTICE_CONTENT_NN NOT NULL,
    NOTICE_REGISTER_DATE DATE DEFAULT SYSDATE CONSTRAINT NOTICE_REGISTER_DATE_NN NOT NULL,
    NOTICE_HIT NUMBER DEFAULT 0 CONSTRAINT NOTICE_HIT_NN NOT NULL,
    NOTICE_STATUS CHAR(1) DEFAULT 'Y' CONSTRAINT NOTICE_STATUS_NN NOT NULL CONSTRAINT NOTICE_STATUS_CK CHECK(NOTICE_STATUS IN ('Y', 'N'))
);

COMMENT ON COLUMN NOTICE.NOTICE_NO IS '공지사항번호';
COMMENT ON COLUMN NOTICE.NOTICE_TITLE IS '공지사항제목';
COMMENT ON COLUMN NOTICE.NOTICE_CONTENT IS '공지사항내용';
COMMENT ON COLUMN NOTICE.NOTICE_REGISTER_DATE IS '공지사항작성일시';
COMMENT ON COLUMN NOTICE.NOTICE_HIT IS '공지사항조회수';
COMMENT ON COLUMN NOTICE.NOTICE_STATUS IS '공개여부';

CREATE SEQUENCE SEQ_NOTICE_NO NOCACHE;


--------------------------------------------------
------------------ 신고 (REPORT) -----------------
--------------------------------------------------
CREATE TABLE REPORT (
    REPORT_NO NUMBER CONSTRAINT REPORT_NO_PK PRIMARY KEY,
    REVIEW_NO NUMBER,
    COM_NO NUMBER,
    COM_RPL_NO NUMBER,
    USER_NO NUMBER CONSTRAINT REPORT_USER_NO_NN NOT NULL,
    REPORT_REASON VARCHAR2(100) CONSTRAINT REPORT_REASON_NN NOT NULL,
    REPORT_DATE DATE DEFAULT SYSDATE CONSTRAINT REPORT_DATE_NN NOT NULL,
    REPORT_STATUS CHAR(1) DEFAULT 'N' CONSTRAINT REPORT_STATUS_NN NOT NULL CONSTRAINT REPORT_STATUS_CK CHECK(REPORT_STATUS IN ('Y', 'N')),
    CONSTRAINT REPORT_REVIEW_NO_FK FOREIGN KEY (REVIEW_NO) REFERENCES REVIEW(REVIEW_NO),
    CONSTRAINT REPORT_COM_NO_FK FOREIGN KEY (COM_NO) REFERENCES COMMUNITY(COM_NO),
    CONSTRAINT REPORT_COM_RPL_NO_FK FOREIGN KEY (COM_RPL_NO) REFERENCES COMMUNITY_REPLY(COM_RPL_NO),
    CONSTRAINT REPORT_USER_NO_FK FOREIGN KEY (USER_NO) REFERENCES MEMBER(USER_NO)
);

COMMENT ON COLUMN REPORT.REPORT_NO IS '신고내역번호';
COMMENT ON COLUMN REPORT.REVIEW_NO IS '신고한리뷰작성번호';
COMMENT ON COLUMN REPORT.COM_NO IS '신고한커뮤니티글번호';
COMMENT ON COLUMN REPORT.COM_RPL_NO IS '신고한커뮤니티댓글번호';
COMMENT ON COLUMN REPORT.USER_NO IS '신고한회원번호';
COMMENT ON COLUMN REPORT.REPORT_REASON IS '신고사유';
COMMENT ON COLUMN REPORT.REPORT_DATE IS '신고일시';
COMMENT ON COLUMN REPORT.REPORT_STATUS IS '신고처리여부';

CREATE SEQUENCE SEQ_REPORT_NO NOCACHE;


COMMIT;